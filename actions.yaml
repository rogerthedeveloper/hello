name: Build and Deploy to EKS using GHCR

on:
  push:
    branches:
      - main  # Se ejecuta cuando hay un push a la rama main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Paso 1: Clonar el repositorio
      - name: Checkout repository
        uses: actions/checkout@v3

      # Paso 2: Configurar Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Paso 3: Autenticaci√≥n en GHCR (GitHub Container Registry)
      - name: Log in to GitHub Container Registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      # Paso 4: Construir la imagen de Docker
      - name: Build Docker image
        run: |
          docker build -t ghcr.io/${{ github.repository }}/hello:latest .

      # Paso 5: Publicar la imagen en GHCR
      - name: Push Docker image to GHCR
        run: |
          docker push ghcr.io/${{ github.repository }}/hello:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # Paso 6: Configurar credenciales AWS
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # Paso 7: Configurar kubectl
      - name: Set up kubectl
        uses: kubernetes/setup-kubectl@v3
        with:
          version: v1.27.0

      # Paso 8: Obtener el kubeconfig de EKS
      - name: Update kubeconfig for EKS
        run: |
          aws eks update-kubeconfig --name ${{ secrets.EKS_CLUSTER_NAME }} --region ${{ secrets.AWS_REGION }}

      # Paso 9: Desplegar en EKS
      - name: Deploy to EKS
        run: |
          kubectl apply -f .k8s/deployment.yaml
          kubectl apply -f .k8s/service.yaml
